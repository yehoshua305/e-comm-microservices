# name: GitHub Actions
# on:
#   push: { branches: [main] }

# jobs:
#   Terraform:
#     runs-on: ubuntu-latest
#     env:
#       working-directory: terraform
#       REGION: eu-west-1
#     permissions:
#       id-token: write
#       contents: read
#     steps:
#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v4
#         with:
#           aws-region: ${{ env.REGION }}
#           role-to-assume: arn:aws:iam::${{ secrets.ACCOUNT_ID }}:role/${{ secrets.ROLE_NAME }}
#           role-session-name: ConfigureInfra

#       - name: Check out code
#         uses: actions/checkout@v4

#       - name: Set up Go 1.2x
#         uses: actions/setup-go@v5
#         with:
#           go-version: ^1.22
      
#       - name: Go Unit Tests
#         run: go test -v .
#         working-directory: api

#       - name: Terraform fmt
#         id: fmt
#         run: terraform fmt -check
#         continue-on-error: true

#       - name: Terraform Init
#         id: init
#         run: terraform init
#         working-directory: ${{ env.working-directory }}

#       - name: Terraform Validate
#         id: validate
#         run: terraform validate
#         working-directory: ${{ env.working-directory }}

#       - name: Terraform Plan
#         id: plan
#         run: |
#           terraform plan -var-file=./variables/vars.tfvars
#         working-directory: ${{ env.working-directory }}

#       - name: Terraform Apply
#         id: apply
#         if: github.ref == 'refs/heads/main' && github.event_name == 'push'
#         run: |
#           terraform init
#           terraform apply -auto-approve -input=false -var-file=./variables/vars.tfvars
#         working-directory: ${{ env.working-directory }}





#   # Build-GO:
#   #   runs-on: ubuntu-latest
#   #   steps:
#   #     - name: Set up Go 1.2x
#   #       uses: actions/setup-go@v5
#   #       with:
#   #         go-version: ^1.22
#   #     - name: Check out source code
#   #       uses: actions/checkout@v4
#   #     - name: Build GO
#   #       run: go build .
#   #       working-directory: api

#   # Terraform-Apply:
#   #   needs: [Terraform-Plan]
#   #   runs-on: ubuntu-latest
#   #   env:
#   #     working-directory: terraform
#   #     REGION: eu-west-1
#   #   permissions:
#   #     id-token: write
#   #     contents: read
#   #   steps:
#   #     - name: Configure AWS credentials
#   #       uses: aws-actions/configure-aws-credentials@v4
#   #       with:
#   #         aws-region: ${{ env.REGION }}
#   #         role-to-assume: arn:aws:iam::${{ secrets.ACCOUNT_ID }}:role/${{ secrets.ROLE_NAME }}
#   #         role-session-name: ConfigureInfra
#   #     - name: Check out code
#   #       uses: actions/checkout@v4

#   #     - name: Terraform Apply
#   #       id: apply
#   #       if: github.ref == 'refs/heads/main' && github.event_name == 'push'
#   #       run: |
#   #         terraform init
#   #         terraform apply -auto-approve -input=false -var-file=./variables/vars.tfvars
#   #       working-directory: ${{ env.working-directory }}
#   #     # - name: Upload Go binary
#   #     #   uses: actions/upload-artifact@v4
#   #     #   with:
#   #     #     name: go-binary
#   #     #     path:  ${{ env.working-directory }}/builds/*.zip
